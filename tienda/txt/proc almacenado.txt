//======	Agregar producto a existencia

DELIMITER $$
	CREATE PROCEDURE actualizar_precio_producto (n_cantidad int, n_precio decimal(10,2), codigo int)
	BEGIN
		DECLARE nueva_existencia int;
		DECLARE nuevo_total decimal (10, 2);
		DECLARE nuevo_precio decimal (10, 2);
        
		DECLARE cant_actual int;
		DECLARE pre_actual decimal (10, 2);
        
		DECLARE actual_existencia int;
		DECLARE actual_precio decimal(10,2);
        
        SELECT precio,existencia INTO actual_precio,actual_existencia FROM producto WHERE cod_producto = codigo;
		SET nueva_existencia = actual_existencia + n_cantidad;
		SET nuevo_total = (actual_existencia * actual_precio) + (n_cantidad * n_precio);
		SET nuevo_precio = nuevo_total / nueva_existencia;
        
		UPDATE producto SET existencia = nueva_existencia, precio = nuevo_precio WHERE cod_producto = codigo;
        
		SELECT nueva_existencia, nuevo_precio;
        
	END;$$
DELIMITER ;

//===============================================================================//


//======	Agregar a la tabla "detalle_temp"

DELIMITER $$
CREATE PROCEDURE add_detalle_temp(codigo int, cantidad int, token_user varchar(50))
	BEGIN

		DECLARE precio_actual decimal(10,2);
		SELECT precio INTO precio_actual FROM producto WHERE cod_producto = codigo;

		INSERT INTO detalle_temp(token_user, cod_producto, cantidad, precio_venta) VALUE(token_user, codigo, cantidad, precio_actual);

		SELECT tmp.correlativo, tmp.cod_producto, p.descripcion, tmp.cantidad, tmp.precio_venta FROM detalle_temp tmp
		INNER JOIN producto p
		ON tmp.cod_producto = p.cod_producto
		WHERE tmp.token_user = token_user;

	END;$$
DELIMITER ;

//===============================================================================//

//======	Eliminar datos de la tabla Detalles temporales

DELIMITER $$
	CREATE PROCEDURE del_detalle_temp(id_detalle int, token varchar(50))
	BEGIN
		DELETE FROM detalle_temp WHERE correlativo = id_detalle;

		SELECT tmp.correlativo, tmp.cod_producto, p.descripcion, tmp.cantidad, tmp.precio_venta FROM detalle_temp tmp
		INNER JOIN producto p
		ON tmp.cod_producto = p.cod_producto
		WHERE tmp.token_user = token;

	END;$$
DELIMITER ;

//===============================================================================//


//======	Procesar venta y emicion de Factura

DELIMITER $$
	CREATE PROCEDURE procesar_venta(cod_usuario int, cod_cliente int, token varchar(50))
	BEGIN
		DECLARE factura int;

		DECLARE registros int;
		DECLARE total decimal(10,2);

		DECLARE nueva_existencia int;
		DECLARE existencia_actual int;

		DECLARE tmp_cod_producto int;
		DECLARE tmp_cant_producto int;
		DECLARE a int;
		SET a = 1;

		CREATE TEMPORARY TABLE tbl_tmp_tokenuser (
			id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
			cod_prod BIGINT,
			cant_prod int
		);

		SET registros = (SELECT COUNT(*) FROM detalle_temp WHERE token_user = token);

		IF registros > 0 THEN
			INSERT INTO tbl_tmp_tokenuser(cod_prod, cant_prod) SELECT cod_producto, cantidad FROM detalle_temp WHERE token_user = token;

			INSERT INTO factura(usuario, cod_cliente) VALUE (cod_usuario, cod_cliente);
			SET factura = LAST_INSERT_ID();

			INSERT INTO detalle_factura(no_factura, cod_producto, cantidad, precio_venta) SELECT (factura) AS no_factura, cod_producto, cantidad, precio_venta FROM detalle_temp WHERE token_user = token;

			WHILE a <= registros DO
				SELECT cod_prod, cant_prod INTO tmp_cod_producto, tmp_cant_producto FROM tbl_tmp_tokenuser WHERE id = a;
				SELECT existencia INTO existencia_actual FROM producto WHERE cod_producto = tmp_cod_producto;

				SET nueva_existencia = existencia_actual - tmp_cant_producto;
				UPDATE producto SET existencia = nueva_existencia WHERE cod_producto = tmp_cod_producto;

				SET a = a + 1;

			END WHILE;

			SET total = (SELECT SUM(cantidad * precio_venta) FROM detalle_temp WHERE token_user = token);
			UPDATE factura SET total_factura = total WHERE no_factura = factura;
			DELETE FROM detalle_temp WHERE token_user = token;
			TRUNCATE TABLE tbl_tmp_tokenuser;
			SELECT * FROM factura WHERE no_factura = factura;

		ELSE

			SELECT 0;

		END IF;

	END;$$
DELIMITER ;

//===============================================================================//

//======	Anulacion de facturas

DELIMITER $$
	CREATE PROCEDURE anular_factura(nofactura int)
	BEGIN

		DECLARE existe_factura int;
		DECLARE registros int;
		DECLARE a int;

		DECLARE cod_producto int;
		DECLARE cant_producto int;
		DECLARE existencia_actual int;
		DECLARE nueva_existencia int;

		SET existe_factura = (SELECT COUNT(*) FROM factura WHERE no_factura = nofactura AND estatus = 1);

		IF existe_factura > 0 THEN 
			CREATE TEMPORARY TABLE tbl_tmp (
				id BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
				cod_prod BIGINT,
				cant_prod int);

				SET a = 1;

				SET registros = (SELECT COUNT(*) FROM detalle_factura WHERE no_factura = nofactura);

				IF registros > 0 THEN
					INSERT INTO tbl_tmp(cod_prod, cant_prod) SELECT cod_producto, cantidad FROM detalle_factura WHERE no_factura = nofactura;

					WHILE a <= registros DO
						SELECT cod_prod, cant_prod INTO cod_producto, cant_producto FROM tbl_tmp WHERE id = a;
						SELECT existencia INTO existencia_actual FROM producto WHERE cod_producto = cod_producto;
						SET nueva_existencia = existencia_actual + cant_producto;
						UPDATE producto SET existencia = nueva_existencia WHERE cod_producto = cod_producto;

						SET a = a+1;
					END WHILE;
					
					UPDATE factura SET estatus = 2 WHERE no_factura = nofactura;
					DROP TABLE tbl_tmp;
					SELECT * FROM factura WHERE no_factura = nofactura;

				END IF;
		ELSE
			SELECT 0 factura;
		END IF;

END;$$
DELIMITER ;

//===============================================================================//

//======	Datos para el Dashboar

DELIMITER $$
	CREATE PROCEDURE data_dashboard()
	BEGIN

		DECLARE usuarios int;
		DECLARE clientes int;
		DECLARE proveedores int;
		DECLARE productos int;
		DECLARE ventas int;

		SELECT COUNT(*) INTO usuarios FROM usuario WHERE estatus !=10;
		SELECT COUNT(*) INTO clientes FROM cliente WHERE estatus !=10;
		SELECT COUNT(*) INTO proveedores FROM proveedor WHERE estatus !=10;
		SELECT COUNT(*) INTO productos FROM producto WHERE estatus !=10;
		SELECT COUNT(*) INTO ventas FROM factura WHERE estatus !=10;

		SELECT usuarios, clientes, proveedores, productos, ventas;

	END;$$
DELIMITER ;

//===============================================================================//